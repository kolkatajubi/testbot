{
  "_args": [
    [
      {
        "raw": "dashbot-logger@^1.0.4",
        "scope": null,
        "escapedName": "dashbot-logger",
        "name": "dashbot-logger",
        "rawSpec": "^1.0.4",
        "spec": ">=1.0.4 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\suvo\\Desktop\\test_bot\\node_modules\\dashbot"
    ]
  ],
  "_from": "dashbot-logger@^1.0.4",
  "_hasShrinkwrap": false,
  "_id": "dashbot-logger@1.0.4",
  "_location": "/dashbot-logger",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/dashbot-logger_1.0.4_1550082156640_0.3138268945394673"
  },
  "_npmUser": {
    "name": "shotamakino",
    "email": "shota@dashbot.io"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dashbot-logger@^1.0.4",
    "scope": null,
    "escapedName": "dashbot-logger",
    "name": "dashbot-logger",
    "rawSpec": "^1.0.4",
    "spec": ">=1.0.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/dashbot"
  ],
  "_resolved": "https://registry.npmjs.org/dashbot-logger/-/dashbot-logger-1.0.4.tgz",
  "_shasum": "ce433bfac85d240448747239e7fde75f1281e600",
  "_shrinkwrap": null,
  "_spec": "dashbot-logger@^1.0.4",
  "_where": "C:\\Users\\suvo\\Desktop\\test_bot\\node_modules\\dashbot",
  "author": "",
  "bugs": {
    "url": "https://github.com/actionably/dashbot/issues"
  },
  "dependencies": {
    "aws-sdk": "^2.401.0",
    "generic-pool": "^3.6.1",
    "lodash": "^4.17.11",
    "pump": "^3.0.0",
    "uuid": "^3.3.2"
  },
  "description": "Lambda logger for a custom CloudWatch log group.",
  "devDependencies": {
    "eslint": "^5.13.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-node": "^8.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-standard": "^4.0.0",
    "mocha": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-uTWnDRz4iya8YtScHZn4mer22unJpGmB2al0x94ZrAYbU6wVA9OMOXXoeMKX1CQm7AbGD3EYjGbKd++qdRIQkA==",
    "shasum": "ce433bfac85d240448747239e7fde75f1281e600",
    "tarball": "https://registry.npmjs.org/dashbot-logger/-/dashbot-logger-1.0.4.tgz",
    "fileCount": 9,
    "unpackedSize": 12078,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZGBtCRA9TVsSAnZWagAA6vcP/1bZhi2PEtLw/b5wJ94M\nu2dzYCtSogV0DEvY5t+hViEb7mPtAEvfcZVNrKI71uXGYS3OaUNJvsycoR2G\nfApU2qGuia1AN9yze9vbOeQG+tTK4X4F5Pns15lFCjNKYGxymPNoKsway8et\nnethm7Sex2tdrhrO6zab9HQ54pCKXJ5UWsrWQAtioLU+2y3DDggR2GubcsMT\nu3eDGz03rsLevOPeqQTU1IOoXEh8+NIQdPVvwz1dGEOJ7S03omNGg0nGKE8g\nMbj82p+OiyzsrccYvSM/idmMTcuAwb2CHrs8Pks5OBTvRmCvXlPFGO/bm+0T\n7HXxaztaPZWP23tAVY/25UthF1dk6QLjN7h/XgB4mxq6yFxSUANgG5fi4Kdy\nI5MyQfINvbbbXnvnh309cPL10ICcb7E+SEm3tqZPAkhpJdFqaQ8qb6hIrFzh\nMVy5ixO3nno413g0LuK6aoff/Z7yxhnezgL07WxOWjdW+5uXUlrrVqHz6lbt\nsXyMBAOv29DmMnxiPZUWMIT9a4eM5YgA9JJREKSj59+4AuW0vm71IOFuR7MR\nbvVfbVWeItVyiVeVGmesb6E3eTNtfCDwqn3mFK8MM9CCij/8ZOXWWvgVW6zc\nrYh7qRFeJegwTRIGijvUwbxf0jyITl7E7wburkK69k57lHFFBCA6lCXbqB/5\nF++n\r\n=dbYL\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "61153fee7a7c9be656264130ef340beba066986b",
  "homepage": "https://github.com/actionably/dashbot-logger#readme",
  "keywords": [
    "CloudWatch",
    "Logs",
    "Lambda"
  ],
  "license": "ISC",
  "main": "lib/log-stream.js",
  "maintainers": [
    {
      "name": "shotamakino",
      "email": "shota@dashbot.io"
    }
  ],
  "name": "dashbot-logger",
  "optionalDependencies": {},
  "readme": "# dashbot-logger\n\ndashbot-logger allows you to log to a specific log group in CloudWatch Logs apart from the default\nlog group that Lambda functions set up. The logger works around the 5 putLogEvent/s limit by \nbatching up log events and using a pool of log streams to put log events to.\n\n## Setup\n\n***This package uses the aws-sdk, and will require an AWS account.*** \n\n```bash\nnpm install --save dashbot-logger\n```\n\nPass in your AWS credentials and a region as follows, or configure using one of the options listed \n[here](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-region.html)\n\n  - ***region*** - ```string``` aws region\n  - ***accessKeyId*** - ```string``` access key\n  - ***secretAccessKey*** - ```string``` secret key\n  - ***logGroupName*** - (required) ```string``` user specified log group name\n  \n```javascript\nconst configuration = {\n  region: <REGION>,\n  accessKeyId: <ACCESS-KEY>,\n  secretAccessKey: <SECRET-KEY>,\n  logGroupName: <LOG-GROUP-NAME>,\n}\n\nconst Logger = require('dashbot-logger')\nconst logger = new Logger(configuration)\n``` \n\nYou can also pass in additional configuration options to specify the behavior of the resource pool for \nlog streams and naming of log streams.\n\n## Configuration Options\nAvailable options:\n\n  - ***debug*** - (default: ```false```, ```boolean```) logs helpful debugging information \n  - ***logStreamPrefix*** - (default: ```dashbot```, ```string```) user specified log stream prefix \n  - ***maxStreams*** - (default: ```10```, ```number```) max number of log streams to use concurrently \n  - ***minStreams*** - (default: ```1```, ```number```) min number of log streams to use concurrently  \n  \nOptionally, you can use the following environment variables to set certain options:\n\n  - for ***logGroupName*** set DASHBOT_LOG_GROUP_NAME\n  - for ***logStreamPrefix*** set DASBOT_LOG_STREAM_PREFIX\n  - for ***maxStreams*** set DASHBOT_LOG_MAX_STREAMS\n  - for ***minStreams*** set DASHBOT_LOG_MIN_STREAMS\n\n## Example\n\n```javascript\nconst configuration = {\n  'logGroupName': 'test-group',\n  'logStreamPrefix': 'test-stream',\n  'maxStreams': 5,\n  'minStreams': 2,\n  'debug': true,\n  'printErrors': true,\n}\n\nconst Logger = require('dashbot-logger')\nconst logger = new Logger(configuration)\n\nlogger.log('test') // logs to log-group 'test-group' with string test\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/actionably/dashbot-logger.git"
  },
  "scripts": {
    "eslint": "eslint lib",
    "eslint-fix": "eslint --fix lib",
    "test": "eslint lib && mocha $(find lib -name '*.js' | grep __tests__)"
  },
  "version": "1.0.4"
}
