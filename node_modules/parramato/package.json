{
  "_args": [
    [
      {
        "raw": "parramato",
        "scope": null,
        "escapedName": "parramato",
        "name": "parramato",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\suvo\\Desktop\\test_bot"
    ]
  ],
  "_from": "parramato",
  "_hasShrinkwrap": false,
  "_id": "parramato@1.0.4",
  "_inBundle": false,
  "_integrity": "sha512-UFi4OcbnOT6hlM1oTlDjCh/0as0uCYJVSVh/dNEq6Bxf9DABEqwFCXk5toHkqhA+IIgvTAQmSg0bRuuVK1BHpA==",
  "_location": "/parramato",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/parramato_1.0.4_1566553154834_0.5501035325815562"
  },
  "_npmUser": {
    "name": "parramato",
    "email": "souvik131@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parramato",
    "scope": null,
    "escapedName": "parramato",
    "name": "parramato",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/parramato/-/parramato-1.0.4.tgz",
  "_shasum": "d8c0f766c27bd1fe9829140b032895d8977a75a1",
  "_shrinkwrap": null,
  "_spec": "parramato",
  "_where": "C:\\Users\\suvo\\Desktop\\test_bot",
  "author": "",
  "bundleDependencies": false,
  "dependencies": {
    "body-parser": "^1.19.0",
    "dashbot": "^10.4.1",
    "express": "^4.17.1",
    "fcm-push": "^1.1.3",
    "g-crypt": "^1.1.0",
    "mkdirp": "^0.5.1",
    "mongoose": "^5.6.4",
    "redis": "^2.8.0",
    "request": "^2.88.0",
    "sentence-tokenizer": "^1.0.1",
    "socket.io": "^2.2.0",
    "socket.io-redis": "^5.2.0",
    "twilio": "^3.33.1",
    "web-push": "^3.3.5"
  },
  "deprecated": false,
  "description": "npm install parramato --save",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-2T6BF6+iioqvQorJr5q/m9uAXNh0gENZ/BEeNAJ3/If0L9v1yfWyqyM96AWxKgMnbIHjkqBngD98AItt8IsBJA==",
    "shasum": "d8c0f766c27bd1fe9829140b032895d8977a75a1",
    "tarball": "https://registry.npmjs.org/parramato/-/parramato-1.0.4.tgz",
    "fileCount": 20,
    "unpackedSize": 201294,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdX7RDCRA9TVsSAnZWagAAoC8P/0EhH/IPDoZe6BrRPwq/\nzC1GMmnxH/PbTM/gPHNIWkJmo1fKm0Rwit2fk4QBUw4Y1HTB86+LhCyMQo7r\n9qPc4/uQHFV+uTFmU2oaYCWSEWKuiY9LtcV7b5kNmMf7Mm+h8kLDRYVvBPE+\nvVDu6XDrbXKjXRJAiwY7dDPZZNerbg0eY0x1bLRheQs0e9aAVquz+kUwAL9m\nhQssANQkVXeh6A9JkcpIlZFzqBC2QJdZdjUaCQPny3G8NxIlqMaCv4S7Poiu\nli7M3BwoKWjiqGeeD2pdgamNwJaPjQiXF99b/kpAkgB5Wicong5EzB1YEkUe\nsGr8HvFS/mFJ0utg/H8Ws0jk2+GthpP2k2GCwyIXdcJRgx+5EpMII1ApJX3T\ng6xpAxs3YDIRO2W2nhmYdZLIWBGFefd2/RhagRU0eVXwlEGMjUucY3MKcWrY\n/Vhze3+kdzKf2NjPNYtG8u7Bb0woLN5AeSDwjqjuUFDvz1djYsE5Zo1ThWV5\nn5lQEO3PVEmXR9qeqAIDsv2MlmBaaTYucVZ5Z6ZMsJx5JsDA5rfn/9o9SnBv\nP//XlTu39Uz+8Bk/HrzLE3v+I+e4+9PI3AWE3cBeLUqc1ziDfHjla3xiugYV\nwgcxzWSCvkb21EtIgFq0HevdFjkiihQl7kEY56/NYsRrye78RZ5fNaxEnwRy\nQ9I4\r\n=f2e3\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "license": "ISC",
  "main": "server.js",
  "maintainers": [
    {
      "name": "parramato",
      "email": "souvik131@gmail.com"
    }
  ],
  "name": "parramato",
  "optionalDependencies": {},
  "readme": "# Installation\r\n\r\nnpm install parramato --save\r\n\r\n\r\n## Usage\r\nInitializing a Server. You need to have Mongo Db endpoints. (Web by default)\r\n```\r\n require(\"parramato\").Server({\r\n    root:\"https://yourdomain.com/path\",\r\n    socketLocalPath: '/socket',\r\n    httpPort:4000,\r\n    cluster:false,\r\n    dbUri:'mongodb://root:root@127.0.0.1:27017/pigaro',\r\n    staticDirectory:__dirname+\"/static\",\r\n    adapterPath:\"/adapter\",\r\n    adapterDirectory:__dirname+\"/adapter\",\r\n    projectId:\"myproject_100911645983\",\r\n    dashbotKey:\"VxtYPVW6168LIiXwqpIku9wE\",\r\n    directMultiplier:1,\r\n    fallbackMultiplier:0.8,\r\n    passphraseMiddleware:\"YGUYGgyjgblgUGIYGIGkwhbiuashbo98u9283hr9h24rqIYGI932kbidbiadsYE\",\r\n    timeoutSeconds:60,\r\n    fcmServerKey:\"AAAAYTZC9WQ:APA91bFRmKa\",\r\n    firebaseWebConfig:{\r\n        apiKey: \"sd-ZrO9xKQ\",\r\n        authDomain: \"on-f31.firebaseapp.com\",\r\n        databaseURL: \"https://on-f31.firebaseio.com\",\r\n        projectId: \"on-f31\",\r\n        storageBucket: \"\",\r\n        messagingSenderId: \"4175221234234\"\r\n    }\r\n},()=>{\r\n    //TO DO AFTER INITIALIZATION\r\n})\r\n```\r\nInitializing the Cluster. You need to have Redis and Mongo Db endpoints.\r\n```\r\n require(\"parramato\").Server({\r\n    root:\"https://yourdomain.com/path\",\r\n    socketLocalPath: '/socket',\r\n    httpPort:4000,\r\n    cluster:true,\r\n    redis:{\r\n        host:'127.0.0.1',\r\n        port:6379\r\n    },\r\n    dbUri:'mongodb://root:root@127.0.0.1:27017/pigaro',\r\n    staticDirectory:__dirname+\"/static\",\r\n    adapterPath:\"/adapter\",\r\n    adapterDirectory:__dirname+\"/adapter\",\r\n    projectId:\"myproject_100911645983\",\r\n    dashbotKey:\"VxtYPVW6168LIiXwqpIku9wE\",\r\n    directMultiplier:1,\r\n    fallbackMultiplier:0.8,\r\n    passphraseMiddleware:\"YGUYGgyjgblgUGIYGIGkwhbiuashbo98u9283hr9h24rqIYGI932kbidbiadsYE\",\r\n    timeoutSeconds:60,\r\n    fcmServerKey:\"AAAAYTZC9WQ:APA91bFRmKa\",\r\n    firebaseWebConfig:{\r\n        apiKey: \"sd-ZrO9xKQ\",\r\n        authDomain: \"on-f31.firebaseapp.com\",\r\n        databaseURL: \"https://on-f31.firebaseio.com\",\r\n        projectId: \"on-f31\",\r\n        storageBucket: \"\",\r\n        messagingSenderId: \"4175221234234\"\r\n    }\r\n },()=>{\r\n    //TO DO AFTER INITIALIZATION\r\n})\r\n```\r\nFor Facebook initialization\r\n```\r\n //TO DO AFTER INITIALIZATION\r\n require(\"parramato\").facebook({\r\n     verificationToken:\"verify\",\r\n     pageAccessToken:\"EAAC0860ccOEBAP3189NahL5IUkeqo7\",\r\n     path:\"/fb\"\r\n })\r\n```\r\nFor Twilio Whatsapp initialization\r\n```\r\n //TO DO AFTER INITIALIZATION\r\n require(\"parramato\").whatsapp({\r\n     accountSid: \"AC42dssdsdsdb3e80023\",\r\n     authToken: \"4295006bsd98c6d6a\",\r\n     path: \"/whatsapp\",\r\n     number:\"whatsapp:+919999999999\"\r\n })\r\n```\r\nFor Firebase Mobile initialization\r\n```\r\n //TO DO AFTER INITIALIZATION\r\n require(\"parramato\").mobile({\r\n     fcmKey: \"sdsad23423423dw\",\r\n     path: \"/mobile\"\r\n })\r\n```\r\nCreating adapter folders for apis\r\n```\r\n require(\"parramato\").createAdapter(\"intent\",{\r\n     operationFileNames:{\r\n         validate:\"post\",\r\n         decorate:\"pre\"\r\n     },\r\n     adapterDirectory:__dirname+\"/adapter\"\r\n })\r\n```\r\nCreating frontend folders for static files\r\n```\r\n require(\"parramato\").createFrontend({\r\n    root:\"https://yourdomain.com/path\",\r\n    staticDirectory:__dirname+\"/static\",\r\n    projectId:\"myproject_100911645983\",\r\n    passphraseMiddleware:\"YGUYGgyjgblgUGIYGIGkwhbiuashbo98u9283hr9h24rqIYGI932kbidbiadsYE\",\r\n    firebaseWebConfig:{\r\n        apiKey: \"AIzaSyAAqVdFN_8wbXK4W_YLZj2q6rF-ZrO9xKQ\",\r\n        authDomain: \"push-notification-f31b9.firebaseapp.com\",\r\n        databaseURL: \"https://push-notification-f31b9.firebaseio.com\",\r\n        projectId: \"push-notification-f31b9\",\r\n        storageBucket: \"\",\r\n        messagingSenderId: \"417522185572\"\r\n    },\r\n    iconPath:\"/icon.png\"\r\n })\r\n```\r\nCreating VAPID Public and Private Keys\r\n```\r\nconst vapidKeys=require(\"parramato\").createVAPIDKeys()\r\n```\r\n",
  "readmeFilename": "readme.md",
  "scripts": {
    "start": "node server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.4"
}
